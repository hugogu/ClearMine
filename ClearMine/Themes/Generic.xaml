<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ClearMine.UI.Controls"
                    xmlns:con="clr-namespace:ClearMine.UI.Converters"
                    xmlns:logic="clr-namespace:ClearMine.Logic;assembly=ClearMine.Logic">
    <con:MathOperationConverter x:Key="MathOperationConverter" />
    <Style TargetType="{x:Type local:MineCellControl}">
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="Background"
                Value="{DynamicResource NormalCellBackground}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <!-- Binding BorderThickness will make the whole panel re-layout. Peformace issue. -->
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="RenderOptions.EdgeMode" Value="Aliased" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <!--Keep the default template simple. -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MineCellControl}">
                    <Border x:Name="groudLayer"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid IsHitTestVisible="False">
                            <!-- Don't collapsed the border, because it will cause a re-layout. -->
                            <Border x:Name="minesLayer"
                                    Visibility="Hidden"
                                    Background="{TemplateBinding Foreground}" />
                            <Border x:Name="markLayer"
                                    Visibility="Hidden" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding State}"
                                     Value="{x:Static logic:CellState.Shown}">
                            <Setter TargetName="minesLayer" Property="Visibility" Value="Visible" />
                            <Setter Property="Background" Value="{DynamicResource ShownCellBackground}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}"
                                     Value="{x:Static logic:CellState.MarkAsMine}">
                            <Setter TargetName="markLayer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="markLayer" Property="Background" Value="{DynamicResource FlagImage}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}"
                                     Value="{x:Static logic:CellState.Question}">
                            <Setter TargetName="markLayer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="markLayer" Property="Background" Value="{DynamicResource QuestionMark}" />
                        </DataTrigger>
                        <!-- Shows a un-marked mine. -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ShowResult}" Value="True" />
                                <Condition Binding="{Binding HasMine}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="minesLayer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="minesLayer" Property="Background" Value="{DynamicResource MineImage}" />
                        </MultiDataTrigger>
                        <!-- Shows a wrong marked mine. -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ShowResult}" Value="True" />
                                <Condition Binding="{Binding State}" Value="{x:Static logic:CellState.MarkAsMine}" />
                                <Condition Binding="{Binding HasMine}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="minesLayer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="minesLayer" Property="Background" Value="{DynamicResource MineImage}" />
                            <Setter TargetName="markLayer" Property="Background" Value="{DynamicResource WrongMineMark}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource PressedCellBackground}" />
            </Trigger>
            <DataTrigger Binding="{Binding IsTerminator}"
                         Value="True">
                <Setter Property="Background"
                        Value="#FFAA3333" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MinesNearby}"
                         Value="1">
                <Setter Property="Foreground"
                        Value="{DynamicResource Number1Brush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MinesNearby}"
                         Value="2">
                <Setter Property="Foreground"
                        Value="{DynamicResource Number2Brush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MinesNearby}"
                         Value="3">
                <Setter Property="Foreground"
                        Value="{DynamicResource Number3Brush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MinesNearby}"
                         Value="4">
                <Setter Property="Foreground"
                        Value="{DynamicResource Number4Brush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MinesNearby}"
                         Value="5">
                <Setter Property="Foreground"
                        Value="{DynamicResource Number5Brush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MinesNearby}"
                         Value="6">
                <Setter Property="Foreground"
                        Value="{DynamicResource Number6Brush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MinesNearby}"
                         Value="7">
                <Setter Property="Foreground"
                        Value="{DynamicResource Number7Brush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MinesNearby}"
                         Value="8">
                <Setter Property="Foreground"
                        Value="{DynamicResource Number8Brush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
